Product Requirements Document - Smart English Learning (Version 1.4)

1. Introduction

1.1 Background
The current English learning app market offers various products, but there is still room for improvement for apps targeting elementary and middle school students that effectively enhance vocabulary memorization while balancing listening comprehension and reading foundations with good interactivity. Traditional vocabulary memorization is boring and tedious, listening practice lacks immediate feedback, and reading comprehension is often superficial. To more efficiently utilize existing learning materials and automatically generate high-quality practice content, we introduce PDF import and intelligent sentence generation features.

1.2 Goals
"Smart English Learning" aims to provide an efficient, interesting, and rewarding English learning platform for elementary and middle school students through innovative "dictation fill-in-the-blank" core functionality, combined with scientific vocabulary memorization methods and basic reading training. By supporting PDF import, users can conveniently utilize existing textbooks; through intelligent sentence generation, ensure sentence pattern coverage and practice diversity. The ultimate goal is to provide a stable, easy-to-use, and feature-rich web system that allows users to conduct personalized learning anytime, anywhere, and clearly track their learning progress. Future consideration will be given to introducing paid features to provide more advanced services and continuous operation.

1.3 Vision
To become the preferred web system for elementary and middle school students' English learning, helping them build a solid foundation during the golden period of language learning and cultivate interest and confidence in English.

1.4 Assumptions and Constraints
- Assumptions: Target users (elementary/middle school students) have basic computer or tablet operation skills and can access the internet. Parents or teachers can assist with initial setup.
- Constraints:
  - MVP phase mainly focuses on dictation practice and basic vocabulary/reading functions
  - Backend vocabulary import needs to be compatible with mainstream file formats (such as CSV, PDF)
  - Need to ensure accuracy and naturalness of speech synthesis
  - Application interface should comply with children/adolescent aesthetics, with bright colors and simple operation
  - PDF text recognition accuracy is limited by original document quality, unstructured data import requires manual proofreading
  - As a web system, need to consider compatibility with different browsers and responsive design

1.5 Application Form
This application will be provided as a web system service, users access through browsers without needing to download and install clients.

2. User Personas

2.1 Primary Users: Elementary Students (7-12 years old) & Middle School Students (13-15 years old)
- Pain Points:
  - Vocabulary memorization is boring and easily forgotten
  - Few listening practice opportunities, can't understand
  - Weak reading comprehension ability, difficulty with long sentences
  - Learning lacks interest, easily distracted
  - Need immediate feedback and encouragement
- Needs:
  - Interesting learning methods
  - Ability to listen and practice repeatedly
  - Immediate feedback, knowing right from wrong
  - Can see learning progress and results
  - Quick lookup when encountering new words
- Usage Scenarios: After-class consolidation, weekend study, holiday preview/review

2.2 Secondary Users: Parents/Teachers
- Pain Points:
  - Difficult to effectively supervise children's learning process and effectiveness
  - Don't know children's weak points in English learning
  - Want to provide high-quality learning resources for children
- Needs:
  - Can view children's learning reports
  - Can import custom learning content
  - Simple operation, easy to manage

3. Functional Requirements

3.1 Core Function: Dictation Practice Module
Goal: Improve listening comprehension, spelling ability, and familiarity with sentence patterns.

3.1.1 Sentence Playback
- Voice playback: System clearly reads a complete English sentence
- Slow playback: Provide "slow playback" button, sentence plays at 0.75x or 0.5x speed
- Repeat playback: Provide "repeat playback" button, can click infinitely to play current sentence
- Partial display: When sentence plays, screen can selectively display some known words in the sentence, missing words represented by lines or blank placeholders
- Administrator configuration: Backend can configure which words are displayed by default and which need user input

3.1.2 User Input
- Keyboard input: User inputs missing words through connected device's physical keyboard or virtual keyboard
- Real-time display: Input box displays user input characters in real-time
- Case insensitive: Backend judgment doesn't distinguish case; but after user inputs correctly, final display shows proper capitalization
- Edit function: Support basic editing operations like delete (Backspace), cursor movement
- Submit: After user completes input, need to click "Enter" or "Submit" button on screen to confirm

3.1.3 Immediate Feedback
- Correct feedback:
  - Visual: Correct word highlighted in green with brief encouraging animation
  - Audio: Play short success sound effect
  - Auto jump: Automatically jump to next sentence for practice
- Error feedback:
  - Visual: Incorrectly input word highlighted in red, input box border turns red
  - Audio: Play prompt sound effect
  - Retry opportunity: Allow user multiple attempts at input
- Hint function:
  - Hint button: Provide "hint" button for user to click for help
  - Hint types: First letter hint, phonetic hint, definition hint, complete word hint
  - Hint limit: Backend can configure allowed hint times per sentence

3.1.4 Complete Sentence Display
- Sentence review: After completing current sentence, screen displays complete correct sentence
- Replay: User can click button to replay complete sentence pronunciation

3.2 Vocabulary Learning Module
Goal: Help users systematically learn and memorize words.

3.2.1 Word Cards
- Word display: Show word spelling, phonetics, Chinese definition, part of speech
- Example sentences: Provide at least one example sentence related to the word, support example sentence pronunciation
- Pronunciation: Click word or speaker icon to play standard pronunciation
- Favorites: User can add new words to "vocabulary book"

3.2.2 Categorized Learning
- Category browsing: Words can be browsed and learned by preset categories
- High-frequency vocabulary list: Provide elementary/middle school high-frequency vocabulary lists

3.2.3 Vocabulary Testing
- Test types: Provide multiple test forms like listening-word selection, word-meaning selection, Chinese-English fill-in-the-blank, matching

3.3 Reading Comprehension Module (MVP Basic Version)
Goal: Cultivate reading interest, improve basic reading comprehension ability.

3.3.1 Short Article Reading
- Article display: Provide English short articles suitable for target users
- New word lookup: User clicks any word in article, instantly pops up word definition and pronunciation
- Full text reading: Optional "full text reading" function for convenient listening

3.3.2 Simple Exercises
- Comprehension questions: Each short article can include 2-3 multiple choice or true/false questions

3.4 User Authentication and Personal Center
Goal: Provide secure login/registration mechanism and let users manage personal information and view learning progress.

3.4.1 User Registration
- Registration method: Support email/phone registration with password
- Username: User can set nickname
- Registration verification: Email verification code or SMS verification code

3.4.2 User Login
- Login method: Support email/phone and password login
- Remember me: Optional "remember me" function to maintain login state
- Password recovery: Provide password recovery function

3.4.3 Personal Information Management
- Personal profile: User can view and modify nickname, avatar, password and other personal information

3.4.4 Learning Progress View
- Learning report display: After login, user can clearly view learning progress including total study time, completed sentences, mastered words
- Progress trends: Daily/weekly/monthly study time and accuracy trend charts
- Module progress: Completion of each learning module
- Error overview: Number of errors and common error types
- Error bank entry: Direct entry to error bank from learning report page
- Achievement badge display: Display user's earned achievement badges

4. Non-functional Requirements

4.1 Performance
- Response speed: Application startup time less than 5 seconds, page loading and function response time less than 2 seconds
- Voice playback: Voice playback without lag, smooth and natural

4.2 Usability
- User interface: Simple, intuitive interface design with friendly color matching
- User experience: Clear operation flow, reduce unnecessary clicks, provide good interactive feedback
- Learnability: New users can master basic operations in short time

4.3 Compatibility
- Cross-platform: As web system, needs to work normally on mainstream operating systems through mainstream browsers
- Devices: Website needs responsive design to adapt to different screen sizes
- Keyboard compatibility: Both physical and virtual keyboards can be used normally

4.4 Security
- Data security: User learning data and personal information encrypted storage
- Privacy protection: Strictly comply with user data privacy policy
- Transmission security: Website uses HTTPS protocol

4.5 Maintainability and Scalability
- Code structure: Adopt modular design, clear code, easy to maintain and iterate
- Vocabulary expansion: Backend management system should facilitate administrators to batch import and manage new words and sentence data
- Feature expansion: Architecture design should consider future addition of new features and introduction of paid subscription models

5. Backend Management System Functions

5.1 Vocabulary Management
- Import function:
  - Support CSV/Excel batch import with fields for word data and sentence data
  - Support PDF file import with OCR technology using MinerU for text extraction
  - Content type selection: word list mode or paragraph/article mode
  - Manual proofreading: Provide interface for administrators to manually proofread recognized text
  - Structured conversion: Convert extracted articles into sentences for example generation
- Edit/Delete: Can edit or delete existing words and sentences individually or in batches
- Category management: Administrators can create, edit, delete word and sentence categories

5.2 Intelligent Sentence Generation Algorithm Design
Goal: Automatically generate multiple example sentences that conform to specified sentence patterns and contain target words based on vocabulary and user needs.

5.2.1 Algorithm Input
- Target words: List of words that need example sentences generated
- Sentence pattern rule library: Library containing common sentence structures and grammar rules
- Basic corpus: Large amount of high-quality English sentence corpus
- Generation quantity: Each sentence pattern needs to provide multiple example sentences

5.2.2 Algorithm Core Process
1. Word analysis and feature extraction
2. Sentence pattern matching and filtering
3. Example sentence generation and verification
4. Deduplication and diversity assurance
5. Manual review

5.2.3 Blank Position Marking
- Intelligent blanking: Algorithm should intelligently identify target words in generated sentences and mark them as blank positions
- Flexible configuration: Administrators can manually adjust blank positions during review

5.3 User Management
- User list: View registered user list
- Learning report view: Administrators can view specified user's learning reports
- Permission management: Can set different administrator roles

5.4 System Settings
- Voice settings: Configure default speaker, pronunciation speed
- Learning parameter settings: Configure hint limit times, correct/incorrect feedback sounds in dictation practice

6. Data Statistics and Analysis
- User activity (DAU/MAU)
- Usage time and frequency of each module
- Word learning progress and mastery rate
- Dictation practice accuracy and error rate distribution
- Popular words/sentences
- User retention rate

7. Deployment and Environment
- Frontend technology stack: React
- Backend technology stack: Python (Flask framework)
  - Key technology stack:
    - OCR (Optical Character Recognition): Recommend using MinerU
    - NLP (Natural Language Processing): SpaCy, NLTK and other Python libraries
    - TTS (Text-to-Speech): Integrate Minmax or Kokoro API
- Database: PostgreSQL
- Cloud services: AWS/Azure/Google Cloud

8. Milestones
- M1: Product prototype and UI/UX design completed
- M2: User authentication and personal center module development completed
- M3: Core dictation module development completed and internal testing
- M4: Vocabulary learning module and basic backend functions development completed
- M5: PDF text extraction (based on MinerU) and intelligent sentence generation algorithm development
- M6: TTS integration (Minmax/Kokoro) and voice playback function optimization
- M7: Overall function integration testing, release Alpha version
- M8: Bug fixes, optimize user experience, release Beta version
- M9: Official launch (MVP)

9. Appendix
- Glossary: MVP, PRD, UI, UX, TTS, OCR, NLP definitions
- Design draft links: TBD
- Use case list: TBD